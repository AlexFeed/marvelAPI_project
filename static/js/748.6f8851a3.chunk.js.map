{"version":3,"file":"static/js/748.6f8851a3.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorBoundary/ErrorBoundary.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","services/useMarvelService.js","hooks/http.hook.js"],"sourcesContent":["import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import {Component} from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({error: true});\r\n    }\r\n\r\n    render () {\r\n        const {error} = this.state;\r\n\r\n        if (error) {\r\n            return <ErrorMessage/>\r\n        } else {\r\n            return this.props.children;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import errorImg from './error.png';\r\n\r\nimport './errorMessage.scss';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <div className=\"errorBlock\">\r\n            <h1 className=\"errorTitle\">Something went wrong, please try it later:(</h1>\r\n            <img className=\"errorImg\" src={errorImg}  alt=\"Error\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import {useEffect, useState} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\r\n\r\nimport useMarvelService from \"../../services/useMarvelService\";\r\n\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nimport './comicsList.scss';\r\n\r\n\r\nconst ComicsList = () => {\r\n    const {loading, error, getComicsList, clearError} = useMarvelService();\r\n\r\n    const [comicsData, setComicsData] = useState([]);\r\n    const [charListEnded, setCharListEnded] = useState(false);\r\n    const [loadingMore, setLoadingMore] = useState(false);\r\n    const [offset, setOffset] = useState(210);\r\n\r\n    const onComicsListLoaded = (newComicsData) => {\r\n        if (newComicsData.length < 8) {\r\n            setCharListEnded(true);\r\n        }\r\n\r\n        setComicsData([...comicsData, ...newComicsData]);\r\n        setLoadingMore(false);\r\n        setOffset(offset => offset + 8);\r\n    }\r\n\r\n    const updateComicsList = (offset, initial) => {\r\n        clearError()\r\n        initial ? setLoadingMore(false) : setLoadingMore(true);\r\n        getComicsList(offset).then(onComicsListLoaded);\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateComicsList(offset, true);\r\n    }, []);\r\n\r\n\r\n    const comicsListItems = comicsData.map((comicsListItem, i) => {\r\n        return (\r\n            <CSSTransition timeout={500} classNames={'comics__item-transition'} className={'comics__item'} key={i}>\r\n                <ComicsListItem thumbnail={comicsListItem.thumbnail}\r\n                                title={comicsListItem.title}\r\n                                price={comicsListItem.price}\r\n                                id={comicsListItem.id}/>\r\n            </CSSTransition>\r\n        )\r\n    })\r\n\r\n    const spinner = loading && !loadingMore ? <Spinner/> : null;\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const styleButton = {'display': charListEnded ? 'none' : 'block'};\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {spinner}\r\n            {errorMessage}\r\n            <ul className=\"comics__grid\">\r\n                <TransitionGroup className=\"comics__transitionGroup comics__grid\">\r\n                    {comicsListItems}\r\n                </TransitionGroup>\r\n            </ul>\r\n            <button style={styleButton} disabled={loadingMore} onClick={() => updateComicsList(offset, false)}\r\n                    className=\"button button__main button__long\">\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ComicsListItem = ({thumbnail, title, price, id}) => {\r\n\r\n    return (\r\n        <li className=\"comics__item\">\r\n            <NavLink to={`${id}`}>\r\n                <img src={thumbnail} alt={title} className=\"comics__item-img\"/>\r\n                <div className=\"comics__item-name\">{title}</div>\r\n                <div className=\"comics__item-price\">{price}</div>\r\n            </NavLink>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import {Helmet} from \"react-helmet\";\r\n\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page of Marvel comics list\"\r\n                />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ErrorBoundary>\r\n                <ComicsList/>\r\n            </ErrorBoundary>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage","import {useHttp} from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey= '&apikey=94cd8f145a0551e6b7ef67f3edad94c9';\r\n    const _baseOffset = 210;\r\n\r\n    const _transformCharacterInfo = (characterInfo) => {\r\n        return {\r\n            id: characterInfo.id,\r\n            name: characterInfo.name.length > 50 ? `${characterInfo.name.slice(0, 50)}...` : characterInfo.name,\r\n            description: characterInfo.description ? `${characterInfo.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: characterInfo.thumbnail.path + '.' + characterInfo.thumbnail.extension,\r\n            homepage: characterInfo.urls[0].url,\r\n            wiki: characterInfo.urls[1].url,\r\n            comics: characterInfo.comics.items\r\n        }\r\n    }\r\n\r\n    const getCharactersList = async (offset = _baseOffset) => {\r\n        const charactersList =  await request(`${_apiBase}characters?limit=9&offset=${offset}${_apiKey}`);\r\n\r\n        return charactersList.data.results.map(_transformCharacterInfo);\r\n    }\r\n\r\n   const getCharacterInfo = async (id) => {\r\n        const characterInfo = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\r\n        return _transformCharacterInfo(characterInfo.data.results[0]);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacterInfo);\r\n    }\r\n\r\n    const _transformComicInfo = (comicInfo) => {\r\n        return {\r\n            id: comicInfo.id,\r\n            title: comicInfo.title,\r\n            description: comicInfo.description || \"There is no description\",\r\n            pageCount: comicInfo.pageCount || \"There is no information about the number of pages\",\r\n            language: comicInfo.textObjects.length > 0 ? comicInfo.textObjects[0].language : 'en-us',\r\n            price: comicInfo.prices[0].price || \"Not available\",\r\n            thumbnail: comicInfo.thumbnail.path + '.' + comicInfo.thumbnail.extension\r\n        }\r\n    }\r\n\r\n    const getComicsList = async (offset = _baseOffset) => {\r\n        const comicsList = await request(`${_apiBase}comics?limit=8&offset=${offset}${_apiKey}`);\r\n\r\n        return comicsList.data.results.map(_transformComicInfo);\r\n    }\r\n\r\n    const getComicInfo = async (id) => {\r\n        const comicInfo = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\r\n        return  _transformComicInfo(comicInfo.data.results[0]);\r\n    }\r\n\r\n    return {loading, error, getCharactersList, getCharacterInfo, getComicsList, getComicInfo, getCharacterByName, clearError}\r\n}\r\n\r\nexport default useMarvelService;","import {useCallback, useState} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const requestCallback = async (url, method = \"GET\", body = null,\r\n                                   headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n            if (!response.ok) {\r\n                throw new Error(`Couldn't get resource'${url}, status ${response.status}`);\r\n            } else {\r\n                setLoading(false)\r\n                return response.json();\r\n            }\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    const request = useCallback(async (url, method = \"GET\", body = null,\r\n                                 headers = {'Content-Type': 'application/json'}) => {\r\n        return await requestCallback(url, method, body, headers)\r\n    }, [])\r\n\r\n    const clearError = useCallback(\r\n        () => {\r\n            setError(null);\r\n        },\r\n        [],\r\n    );\r\n\r\n    return {loading, request, error, clearError}\r\n}"],"names":["className","src","avengers","alt","avengersLogo","ErrorBoundary","state","error","errorInfo","console","log","this","setState","props","children","Component","errorImg","ComicsListItem","thumbnail","title","price","id","to","useMarvelService","loading","getComicsList","clearError","useState","comicsData","setComicsData","charListEnded","setCharListEnded","loadingMore","setLoadingMore","offset","setOffset","onComicsListLoaded","newComicsData","length","updateComicsList","initial","then","useEffect","comicsListItems","map","comicsListItem","i","CSSTransition","timeout","classNames","spinner","Spinner","errorMessage","ErrorMessage","styleButton","TransitionGroup","style","disabled","onClick","Helmet","name","content","AppBanner","setLoading","setError","requestCallback","url","method","body","headers","fetch","response","ok","Error","status","json","message","request","useCallback","useHttp","_apiBase","_apiKey","_baseOffset","_transformCharacterInfo","characterInfo","slice","description","path","extension","homepage","urls","wiki","comics","items","getCharactersList","charactersList","data","results","getCharacterInfo","getCharacterByName","res","_transformComicInfo","comicInfo","pageCount","language","textObjects","prices","comicsList","getComicInfo"],"sourceRoot":""}