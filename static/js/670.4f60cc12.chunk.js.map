{"version":3,"file":"static/js/670.4f60cc12.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/pages/SinglePage.js","services/useMarvelService.js","hooks/http.hook.js"],"sourcesContent":["import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import errorImg from './error.png';\r\n\r\nimport './errorMessage.scss';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <div className=\"errorBlock\">\r\n            <h1 className=\"errorTitle\">Something went wrong, please try it later:(</h1>\r\n            <img className=\"errorImg\" src={errorImg}  alt=\"Error\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import {useParams} from \"react-router-dom\";\r\nimport {useEffect, useState} from \"react\";\r\nimport useMarvelService from \"../../services/useMarvelService\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst SinglePage = ({Component, dataType}) => {\r\n    const {id} = useParams();\r\n    const [data, setData] = useState(null);\r\n    const {error, loading, getCharacterInfo, getComicInfo, clearError} = useMarvelService();\r\n\r\n    useEffect(() => updateData(), []);\r\n\r\n    const onDataLoaded = (data) => {\r\n        setData(data)\r\n    }\r\n\r\n    const updateData = () => {\r\n        clearError();\r\n\r\n        switch (dataType) {\r\n            case 'character' :\r\n                getCharacterInfo(id).then(onDataLoaded)\r\n                break\r\n            case 'comic' :\r\n                getComicInfo(id).then(onDataLoaded)\r\n                break\r\n            default :\r\n                throw new Error('data type is wrong')\r\n        }\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !data) ? <Component data={{...data}}/> : null;\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <div className=\"single-comic\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SinglePage","import {useHttp} from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey= '&apikey=94cd8f145a0551e6b7ef67f3edad94c9';\r\n    const _baseOffset = 210;\r\n\r\n    const _transformCharacterInfo = (characterInfo) => {\r\n        return {\r\n            id: characterInfo.id,\r\n            name: characterInfo.name.length > 50 ? `${characterInfo.name.slice(0, 50)}...` : characterInfo.name,\r\n            description: characterInfo.description ? `${characterInfo.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: characterInfo.thumbnail.path + '.' + characterInfo.thumbnail.extension,\r\n            homepage: characterInfo.urls[0].url,\r\n            wiki: characterInfo.urls[1].url,\r\n            comics: characterInfo.comics.items\r\n        }\r\n    }\r\n\r\n    const getCharactersList = async (offset = _baseOffset) => {\r\n        const charactersList =  await request(`${_apiBase}characters?limit=9&offset=${offset}${_apiKey}`);\r\n\r\n        return charactersList.data.results.map(_transformCharacterInfo);\r\n    }\r\n\r\n   const getCharacterInfo = async (id) => {\r\n        const characterInfo = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\r\n        return _transformCharacterInfo(characterInfo.data.results[0]);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacterInfo);\r\n    }\r\n\r\n    const _transformComicInfo = (comicInfo) => {\r\n        return {\r\n            id: comicInfo.id,\r\n            title: comicInfo.title,\r\n            description: comicInfo.description || \"There is no description\",\r\n            pageCount: comicInfo.pageCount || \"There is no information about the number of pages\",\r\n            language: comicInfo.textObjects.length > 0 ? comicInfo.textObjects[0].language : 'en-us',\r\n            price: comicInfo.prices[0].price || \"Not available\",\r\n            thumbnail: comicInfo.thumbnail.path + '.' + comicInfo.thumbnail.extension\r\n        }\r\n    }\r\n\r\n    const getComicsList = async (offset = _baseOffset) => {\r\n        const comicsList = await request(`${_apiBase}comics?limit=8&offset=${offset}${_apiKey}`);\r\n\r\n        return comicsList.data.results.map(_transformComicInfo);\r\n    }\r\n\r\n    const getComicInfo = async (id) => {\r\n        const comicInfo = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\r\n        return  _transformComicInfo(comicInfo.data.results[0]);\r\n    }\r\n\r\n    return {loading, error, getCharactersList, getCharacterInfo, getComicsList, getComicInfo, getCharacterByName, clearError}\r\n}\r\n\r\nexport default useMarvelService;","import {useCallback, useState} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const requestCallback = async (url, method = \"GET\", body = null,\r\n                                   headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n            if (!response.ok) {\r\n                throw new Error(`Couldn't get resource'${url}, status ${response.status}`);\r\n            } else {\r\n                setLoading(false)\r\n                return response.json();\r\n            }\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    const request = useCallback(async (url, method = \"GET\", body = null,\r\n                                 headers = {'Content-Type': 'application/json'}) => {\r\n        return await requestCallback(url, method, body, headers)\r\n    }, [])\r\n\r\n    const clearError = useCallback(\r\n        () => {\r\n            setError(null);\r\n        },\r\n        [],\r\n    );\r\n\r\n    return {loading, request, error, clearError}\r\n}"],"names":["className","src","avengers","alt","avengersLogo","errorImg","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Component","dataType","id","useParams","useState","data","setData","useMarvelService","error","loading","getCharacterInfo","getComicInfo","clearError","useEffect","updateData","onDataLoaded","then","Error","errorMessage","ErrorMessage","spinner","Spinner","content","AppBanner","setLoading","setError","requestCallback","url","method","body","headers","fetch","response","ok","status","json","message","request","useCallback","useHttp","_apiBase","_apiKey","_baseOffset","_transformCharacterInfo","characterInfo","name","slice","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","getCharactersList","offset","charactersList","results","map","getCharacterByName","res","_transformComicInfo","comicInfo","title","pageCount","language","textObjects","price","prices","getComicsList","comicsList"],"sourceRoot":""}